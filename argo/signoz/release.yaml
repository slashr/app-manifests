apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: signoz
  namespace: argo-cd
spec:
  destination:
    namespace: signoz
    server: 'https://kubernetes.default.svc'
  syncPolicy:
    automated:
      selfHeal: true
      prune: true
    syncOptions:
      - CreateNamespace=true
  project: default
  source:
    targetRevision: '>=0.84.0'
    repoURL: 'https://charts.signoz.io'
    chart: signoz
    helm:
      values: |
        signoz:
          ingress:
            enabled: true
            className: "traefik"
            annotations:
              external-dns.alpha.kubernetes.io/hostname: signoz.shrub.dev
              external-dns.alpha.kubernetes.io/target: 130.61.64.164
              cert-manager.io/cluster-issuer: letsencrypt-prod
            hosts:
              - host: signoz.shrub.dev
                paths:
                  - path: /
                    pathType: ImplementationSpecific
                    port: 8080
            tls:
              - hosts:
                  - signoz.shrub.dev
                secretName: signoz-tls

          otelCollector:
            config:
              receivers:
                hostmetrics:
                  collection_interval: 60s
                  scrapers:
                    cpu:
                    memory:
                    filesystem:
                    network:
              service:
                pipelines:
                  metrics:
                    receivers: [otlp, hostmetrics]
                    processors: [batch]
                    exporters: [clickhousemetricswrite, metadataexporter, signozclickhousemetrics]

        clickhouse:
          # Restrict scheduling to your ARM nodes
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: name
                        operator: In
                        values:
                          - stanley
                          - phyllis
          nodeSelector:
            kubernetes.io/arch: arm64

          image:
            repository: clickhouse/clickhouse-server
            tag: "24.8"
            pullPolicy: IfNotPresent

          keeper:
            enabled: true
            image:
              repository: clickhouse/clickhouse-keeper
              tag: "24.8"
              pullPolicy: IfNotPresent

          initContainers:
            udf:
              image: alpine:3.20
              command:
                - /bin/sh
                - -c
                - |
                  set -euo pipefail
                  ARCH="$(uname -m | sed \
                    -e 's/aarch64/arm64/' \
                    -e 's/armv8.*/arm64/' \
                    -e 's/armv7.*/arm64/' \
                    -e 's/x86_64/amd64/')"

                  if [ "$ARCH" != "arm64" ] && [ "$ARCH" != "amd64" ]; then
                    echo "Unsupported architecture: $(uname -m) â†’ $ARCH"
                    exit 1
                  fi

                  echo "Downloading histogram-quantile_linux_${ARCH}.tar.gz ..."
                  wget -q "https://github.com/SigNoz/clickhouse-udf/releases/download/v0.1.0/histogram-quantile_linux_${ARCH}.tar.gz" -O /tmp/hq.tar.gz
                  mkdir -p /usr/share/clickhouse/user_scripts
                  tar -xzf /tmp/hq.tar.gz -C /usr/share/clickhouse/user_scripts
                  rm -f /tmp/hq.tar.gz

